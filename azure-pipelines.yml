#trigger: 
#- main
#pool:

#trigger:
#  branches:
#    include:
#    - feature-ms-JoseSilva-mensaje

pool: 'Default'
#pool:
#  vmImage: ubuntu-latest

steps:
- task: Gradle@3
  inputs:
    gradleWrapperFile: 'gradlew'
    tasks: 'build'
    publishJUnitResults: true
    testResultsFiles: '**/TEST-*.xml'
    javaHomeOption: 'JDKVersion'
    sonarQubeRunAnalysis: false
    spotBugsAnalysis: false
  displayName: Compilacion con Gradle

- task: PublishCodeCoverageResults@1
  inputs:
    codeCoverageTool: 'JaCoCo'
    summaryFileLocation: '$(Build.SourcesDirectory)/build/reports/jacoco/test/jacocoTestReport.xml'

#- task: SonarCloudPrepare@1
#  inputs:
#    SonarCloud: 'Sonarcloud'
#    organization: 'devops-foundations-v3'
#    #scannerMode: 'MSBuild'
#    projectKey: 'DevOps-Foundations-V3_microservicio-spring'
#    projectName: 'microservicio-spring'
#  displayName: Preparando Analisis SonarCloud

#- task: Gradle@3
#  inputs:
#    gradleWrapperFile: 'gradlew'
#    tasks: 'sonarqube'
#    publishJUnitResults: true
#    testResultsFiles: '**/TEST-*.xml'
#    javaHomeOption: 'JDKVersion'
#    sonarQubeRunAnalysis: true
#    sqGradlePluginVersionChoice: 'specify'
#    sonarQubeGradlePluginVersion: '3.3'
#    spotBugsAnalysis: false
#  displayName: Analisis SonarCloud

#- task: Docker@2
#  inputs:
#    containerRegistry: 'docker-propio'
#    command: 'login'
#  displayName: Login en Docker

#- task: Docker@2
#  inputs:
#    containerRegistry: 'docker-propio'
#    repository: 'jsilvae/microservicio-spring'
#    command: 'build'
#    Dockerfile: '**/Dockerfile'
#    tags: 'latest'
#  displayName: Build en Docker

#- task: Docker@2
#  inputs:
#    containerRegistry: 'docker-propio'
#    repository: 'jsilvae/microservicio-spring'
#    command: 'push'
#    tags: 'latest'
#  displayName: Push en Docker

#- task: KubectlInstaller@0
#  inputs:
#    kubectlVersion: 'latest'
#  displayName: Instalacion de Kubernetes

#- task: Kubernetes@1
#  inputs:
#    connectionType: 'None'
#    namespace: 'default'
#    command: 'apply'
#    arguments: '-f deployment-app.yaml'
#    #secretType: 'dockerRegistry'
#    #containerRegistryType: 'Azure Container Registry'
#  displayName: Kubernetes Deployment

